name: Deploy Website

on:
  repository_dispatch:
    types: [contentful-publish]
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "20.x"

jobs:
  verify-webhook:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    outputs:
      webhook-verified: ${{ steps.verify.outputs.verified }}
    steps:
      - name: Verify Contentful webhook
        id: verify
        env:
          WEBHOOK_SECRET: ${{ secrets.CONTENTFUL_WEBHOOK_SECRET }}
        run: |
          # Optional webhook verification - uncomment when ready
          # For now, just log the payload and allow all deployments

          PAYLOAD='${{ toJSON(github.event.client_payload) }}'
          echo "Webhook payload received:"
          echo "$PAYLOAD"

          # Simple verification - you can enhance this later
          if [ -n "$WEBHOOK_SECRET" ] && [ "$WEBHOOK_SECRET" != "" ]; then
            echo "Webhook secret is configured - could add HMAC verification here"
            # Add proper HMAC verification later if needed
          fi

          # Always allow deployment for now
          echo "verified=true" >> $GITHUB_OUTPUT
          echo "Webhook verification passed"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [verify-webhook]
    if: always() && (github.event_name != 'repository_dispatch' || needs.verify-webhook.outputs.webhook-verified == 'true')
    environment: production
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Set deployment message
        id: message
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "Deploying from Contentful update"
          else
            echo "Deploying from main branch update"
          fi

      - name: Build Astro site
        run: npm run build
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}
          WEB3FORMS_PUBLIC_ACCESS_KEY: ${{ secrets.WEB3FORMS_PUBLIC_ACCESS_KEY }}

      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ${{ secrets.FTP_PUBLIC_DIR }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.well-known/**
            **/wp/**

      - name: Verify deployment
        run: |
          if [ -n "${{ secrets.DEPLOYMENT_URL }}" ]; then
            echo "Verifying deployment at ${{ secrets.DEPLOYMENT_URL }}"
            sleep 10
            
            for i in {1..3}; do
              if curl -f -s -o /dev/null "${{ secrets.DEPLOYMENT_URL }}"; then
                echo "Deployment verification successful"
                exit 0
              else
                echo "Verification attempt $i failed, retrying..."
                sleep 10
              fi
            done
            
            echo "Verification failed but deployment may still be working"
          else
            echo "No DEPLOYMENT_URL configured, skipping verification"
          fi

      - name: Deployment complete
        run: |
          echo "Deployment completed successfully!"
          if [ -n "${{ secrets.DEPLOYMENT_URL }}" ]; then
            echo "Site should be live at: ${{ secrets.DEPLOYMENT_URL }}"
          fi
