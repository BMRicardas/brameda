---
import Image from "astro/components/Image.astro";

import close from "public/assets/close.svg";
import hamburgerMenu from "public/assets/hamburger-menu.svg";

type Props = {
  expanded?: boolean;
};

const MENU_BUTTON_SIZE = 50;
const ARIA_LABELS = {
  open: "Open navigation menu",
  close: "Close navigation menu",
} as const;

const { expanded } = Astro.props;
---

<button
  aria-controls="mobile-menu"
  aria-expanded={expanded ? "true" : "false"}
  aria-label={expanded ? ARIA_LABELS.close : ARIA_LABELS.open}
  class="menu-toggle"
  id="menu-button"
  popovertarget="mobile-menu"
  popovertargetaction={expanded ? "hide" : "show"}
  type="button">
  <Image
    alt={expanded ? "Close menu icon" : "Menu icon"}
    class="menu-icon"
    height={MENU_BUTTON_SIZE}
    loading="eager"
    src={expanded ? close : hamburgerMenu}
    width={MENU_BUTTON_SIZE}
  />
</button>

<style>
  .menu-toggle {
    display: none;
  }

  @media only screen and (max-width: 50em) {
    .menu-toggle {
      display: block;
      position: fixed;
      top: calc((74 / 10) * 1px);
      right: 1rem;
      background: transparent;
      border: none;
      cursor: pointer;
      color: currentColor;
      padding: 0;
      z-index: 100;
      transition: transform var(--transition-duration);

      animation-name: scrolledMenuButton;

      transition-duration: var(--transition-duration);
      animation-fill-mode: var(--animation-fill-mode);
      animation-timeline: var(--animation-timeline);
      animation-range-start: var(--animation-range-start);
      animation-range-end: var(--animation-range-end);
    }

    .menu-toggle[aria-expanded="true"] {
      transform: rotate(90deg);
    }
  }

  @keyframes scrolledMenuButton {
    from {
      top: calc((74 / 10) * 1px);
    }
    to {
      top: calc((65 / 10) * 1px);
    }
  }
</style>
