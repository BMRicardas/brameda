---
import Image from "astro/components/Image.astro";

import close from "public/assets/close.svg";
import hamburgerMenu from "public/assets/hamburger-menu.svg";

const { expanded } = Astro.props;
---

<!-- <button
  id="menu-button"
  type="button"
  class="button-one"
  aria-controls="primary-navigation"
  aria-expanded="false"
  popovertarget="mobile-nav"
  popovertargetaction="toggle">
  <svg
    fill="var(--button-color)"
    class="hamburger"
    viewBox="0 0 100 100"
    width="35">
    <rect class="line top" width="80" height="10" x="10" y="25" rx="5"></rect>
    <rect class="line middle" width="80" height="10" x="10" y="45" rx="5"
    ></rect>
    <rect class="line bottom" width="80" height="10" x="10" y="65" rx="5"
    ></rect>
  </svg>
</button> -->
<button
  id="menu-button"
  type="button"
  class="button-one"
  aria-controls="primary-navigation"
  aria-expanded="false"
  popovertarget="mobile-nav"
  popovertargetaction={expanded ? "hide" : "show"}>
  <Image src={expanded ? close : hamburgerMenu} alt="Hamburger menu" />
</button>

<style>
  #menu-button {
    display: none;
  }

  @media only screen and (max-width: 50em) {
    #menu-button {
      display: flex;
      background: transparent;
      border: none;
      cursor: pointer;
      padding: 0;
      z-index: 10000000 !important;
    }

    #menu-button {
      --button-color: #333;
    }

    #menu-button .line {
      transition:
        y 100ms ease-in 100ms,
        rotate 100ms ease-in,
        opacity 0ms 100ms;
      transform-origin: center;
    }

    #menu-button[aria-expanded="true"] .line {
      transition:
        y 100ms ease-in,
        rotate 100ms ease-in 100ms,
        opacity 0ms 100ms;
    }

    #menu-button[aria-expanded="true"] :is(.top, .bottom) {
      y: 45;
    }

    #menu-button[aria-expanded="true"] .top {
      rotate: 45deg;
    }

    #menu-button[aria-expanded="true"] .middle {
      opacity: 0;
    }

    #menu-button[aria-expanded="true"] .bottom {
      rotate: -45deg;
    }
  }
</style>
