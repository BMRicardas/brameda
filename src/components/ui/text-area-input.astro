---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"textarea"> & {
  id: string;
  label: string;
  rows?: number;
};

const { id, label, rows = 4, ...rest }: Props = Astro.props;
---

<div class="form-group">
  <label for={id} class="form-label">{label}</label>
  <div class="input-group">
    <textarea
      id={id}
      name={id}
      rows={rows}
      required
      data-invalid="false"
      {...rest}></textarea>
    <small class="feedback-text"></small>
  </div>
</div>

<style>
  .form-group {
    width: 100%;
    padding: 0.5rem;
    display: flex;

    & .form-label {
      font-size: 1.7rem;
      font-weight: 400;
      padding: 1rem;
      width: 11rem;
    }

    & .input-group {
      flex: 1;
      display: flex;
      flex-direction: column;

      & .feedback-text {
        display: none;
        padding: 3px;
        font-size: 1.4rem;
        color: var(--color-danger);
      }
    }

    & textarea {
      appearance: none;
      padding: 1rem;
      color: var(--color-grey-light);
      font-size: 1.7rem;
      font-weight: 300;
      box-shadow: none;
      outline: none;
      background: none;
      border: 1px solid var(--color-grey-light);
      min-height: 83.5px;

      &:focus {
        box-shadow: 0 0 5px var(--color-grey-light);
      }
    }

    @supports (field-sizing: content) {
      & textarea {
        field-sizing: content;
      }
    }

    & textarea {
      resize: vertical;
    }
  }

  .form-group .input-group textarea[data-invalid="true"] {
    border: 1px solid var(--color-danger);
    box-shadow: 0 0 3px var(--color-danger);

    &:focus {
      box-shadow: 0 0 5px var(--color-grey-light);
    }

    & ~ .feedback-text {
      display: block;
    }
  }

  @media only screen and (max-width: 56.25em) {
    .form-group {
      flex-direction: column;
      padding: 0;
    }
  }
</style>
